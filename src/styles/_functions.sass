@function brightness-helper($color)
	$red: red($color) * 299
	$green: green($color) * 587
	$blue: blue($color) * 114
	$rgb: $red + $green + $blue
	@return round(calc($rgb / 1000))

@function color-contrast($color)
	$brightness: brightness-helper($color)
	$luminosity: brightness-helper(#fff)
	$half-lum: calc($luminosity/2)

	@if abs($brightness) < ($half-lum)
		@return white
	@else
		@return black

@function filter-color-contrast($color)
	$brightness: brightness-helper($color)
	$luminosity: brightness-helper(#fff)
	$half-lum: calc($luminosity/2)

	@if abs($brightness) < ($half-lum)
		@return brightness(0%) invert(1)
	@else
		@return brightness(0%) invert(0)

/* @refererences: https://getbootstrap.com/docs/5.2/customize/sass/#colors */

// Tint a color: mix a color with white
@function tint-color($color, $weight)
	@return mix(white, $color, $weight)

// Shade a color: mix a color with black
@function shade-color($color, $weight)
	@return mix(black, $color, $weight)

// Blend a color: mix a color with another color
@function blend-color($source, $target, $weight)
	@return mix($target, $source, $weight)

// Shade the color if the weight is positive, else tint it
@function shift-color($color, $weight)
	@return if($weight > 0, shade-color($color, $weight), tint-color($color, -$weight))

@function extra-text-shadow($color, $layers, $position: -1px, $blur: 1px)
	$init: $position -1px $blur shade-color($color, 25%)
	$value: ()
	$value: append($value, $init, comma)
	@for $i from 1 through $layers
		$shadow: $i + px
		$alpha: 100% - (calc(($i - 1)/$layers) * 100%)
		$text-shadow: $position $shadow $blur $color
		$value: append($value, $text-shadow, comma)
	$end-shadow: ((($layers + 1) + 2) + px)
	$end: $position $end-shadow $blur shade-color($color, 12.5%)
	$value: append($value, $end, comma)
	@return $value

@function shadow-stroke($color, $width: 1px)
	$right: $width 0 0 $color
	$bottom: 0 $width 0 $color
	$left: ($width * -1) 0 0 $color
	$bottom: 0 ($width * -1) 0 $color
	$value: ()
	$value: append($value, $right, comma)
	$value: append($value, $bottom, comma)
	$value: append($value, $left, comma)
	$value: append($value, $bottom, comma)
	@return $value


/* @references https://codepen.io/Suburbanno/pen/OXeMvw */
@function generate-stars($n, $color: #FFF)
	$value: '#{random(2000)}px #{random(20000)}px #{$color}'
	@for $i from 2 through $n
		$value: '#{$value} , #{random(2000)}px #{random(2000)}px #{$color}'

	@return unquote($value)
